cmake_minimum_required(VERSION 3.26)
project(fif)

option(FIF_BUILD_CORE "Build the core module" ON)
option(FIF_BUILD_GFX "Build the gfx module" ON)
option(FIF_BUILD_INPUT "Build the input module" ON)
option(FIF_BUILD_IMGUI "Build the imgui module" ON)
option(FIF_BUILD_LUA_SCRIPTING "Build the lua_scripting module" ON)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_PCH_INSTANTIATE_TEMPLATES ON)
set(LIB_DIR ${CMAKE_CURRENT_SOURCE_DIR}/vendor)
set(SRC_DIR ${CMAKE_CURRENT_SOURCE_DIR}/src)
set(INC_DIR ${CMAKE_CURRENT_SOURCE_DIR}/include)

if(MSVX)
  add_compile_options(-fPIC -fno-exceptions)
else()
  add_compile_options(-fno-exceptions)
endif()

if(CMAKE_BUILD_TYPE STREQUAL "Debug")
  if(NOT MSVC)
    add_compile_options(-g3)
  endif()
  add_compile_definitions(FIF_DEBUG)
  add_compile_definitions(FIF_PROFILING_ENABLED)
elseif(CMAKE_BUILD_TYPE STREQUAL "Release")
  add_compile_definitions(FIF_RELEASE)
  if(MSVC)
    add_compile_options(/O3)
  else()
    add_compile_options(-O3)
  endif()
endif()

function(build_module target dir libs)
  file(GLOB_RECURSE SOURCES ${SRC_DIR}/${dir}/*.cpp)
  add_library(${target} STATIC ${SOURCES})

  set_target_properties(${target} PROPERTIES PUBLIC_HEADER ${INC_DIR}/fif/${dir})

  target_include_directories(${target} PUBLIC ${INC_DIR} ${INC_DIR}/fif/${dir} PRIVATE ${SRC_DIR}/${dir} ${LIB_DIR}/stb)
  target_link_libraries(${target} ${libs})

  target_precompile_headers(${target} PUBLIC ${INC_DIR}/fif/pch.hpp)

  if(MSVC)
    target_compile_options(${target} PUBLIC /W4 /bigobj)
  else()
    target_compile_options(${target} PUBLIC -Wall -Wextra)
  endif()
endfunction()

if(FIF_BUILD_CORE)
  build_module(fif-core core "glfw;glm;glad;EnTT")
  target_compile_definitions(fif-core PUBLIC ENTT_DISABLE_ASSERT)
  add_compile_definitions(FIF_CORE)
endif()

if(FIF_BUILD_GFX)
  build_module(fif-gfx gfx "fif-core")
  add_compile_definitions(FIF_GFX)
endif()

if(FIF_BUILD_INPUT)
  build_module(fif-input input "fif-core")
  add_compile_definitions(FIF_INPUT)
endif()

if(FIF_BUILD_IMGUI)
  build_module(fif-imgui imgui "fif-core;ImGui")
  add_compile_definitions(FIF_IMGUI)
endif()

if(FIF_BUILD_LUA_SCRIPTING)
  add_compile_definitions(SOL_NO_EXCEPTIONS)
  add_subdirectory(${LIB_DIR}/lua)
  add_subdirectory(${LIB_DIR}/sol2)
  build_module(fif-lua_scripting lua_scripting "fif-core;lua::lib;sol2")
  add_compile_definitions(FIF_LUA_SCRIPTING)
endif()

set(GLFW_BUILD_EXAMPLES OFF CACHE INTERNAL "Build GLFW examples")
set(GLFW_BUILD_TESTS OFF CACHE INTERNAL "Build GLFW tests")
set(GLFW_BUILD_DOCS OFF CACHE INTERNAL "Build GLFW docs")
set(GLFW_INSTALL OFF CACHE INTERNAL "Install GLFW")

add_subdirectory(${LIB_DIR}/glfw)
add_subdirectory(${LIB_DIR}/glad)
add_subdirectory(${LIB_DIR}/glm)

add_subdirectory(${LIB_DIR}/entt)
include(${CMAKE_CURRENT_SOURCE_DIR}/cmake/imgui.cmake)
